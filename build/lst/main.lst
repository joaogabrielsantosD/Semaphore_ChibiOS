   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.Read_Collect_Event.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 5265 6164 		.string	"Read/Collect Event"
  12      2F43 6F6C 
  12      6C65 6374 
  12      2045 7665 
  12      6E74 00
  13               		.section	.text.Read_Collect_Event,"ax",@progbits
  15               	Read_Collect_Event:
  16               	.LFB240:
  17               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:main.c        **** 
   4:main.c        ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:main.c        ****     you may not use this file except in compliance with the License.
   6:main.c        ****     You may obtain a copy of the License at
   7:main.c        **** 
   8:main.c        ****         http://www.apache.org/licenses/LICENSE-2.0
   9:main.c        **** 
  10:main.c        ****     Unless required by applicable law or agreed to in writing, software
  11:main.c        ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:main.c        ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:main.c        ****     See the License for the specific language governing permissions and
  14:main.c        ****     limitations under the   License.
  15:main.c        **** */
  16:main.c        **** 
  17:main.c        **** #include "ch.h"
  18:main.c        **** #include "hal.h"
  19:main.c        **** #include <string.h>
  20:main.c        **** #include <stdio.h>
  21:main.c        **** #include "definitions.h"
  22:main.c        **** 
  23:main.c        **** /*
  24:main.c        ****   * Global Variables
  25:main.c        **** */ 
  26:main.c        **** static msg_t queue[QUEUE_SIZE], *rdp, *wrp;
  27:main.c        **** static size_t qsize;
  28:main.c        **** static mutex_t qmtx;
  29:main.c        **** static condition_variable_t qempty;
  30:main.c        **** static condition_variable_t qfull;
  31:main.c        **** 
  32:main.c        **** /*
  33:main.c        ****   * Global Functions
  34:main.c        **** */
  35:main.c        **** void InitBuffer(void);
  36:main.c        **** void PushBUffer(msg_t msg);
  37:main.c        **** msg_t PopBUffer(void);
  38:main.c        **** int IsBUfferEmpty(void);
  39:main.c        **** 
  40:main.c        **** /* 
  41:main.c        ****   * Thread Write Event 
  42:main.c        **** */
  43:main.c        **** static THD_WORKING_AREA(wa_WriteEvent, 128);
  44:main.c        **** static THD_FUNCTION(Write_Save_Event, arg)
  45:main.c        **** {
  46:main.c        ****   chRegSetThreadName("Save/Write Event");
  47:main.c        ****   while (1)
  48:main.c        ****   {
  49:main.c        ****     if (palReadPad(IOPORT2, PEDESTRE) == PAL_LOW)
  50:main.c        ****       PushBUffer(PEDESTRE);
  51:main.c        **** 
  52:main.c        ****     if (palReadPad(IOPORT2, CARRO_SECUNDARIA) == PAL_LOW)
  53:main.c        ****       PushBUffer(CARRO_SECUNDARIA);
  54:main.c        **** 
  55:main.c        ****     if (palReadPad(IOPORT2, AMBULANCIA_PRINCIPAL) == PAL_LOW)
  56:main.c        ****       PushBUffer(AMBULANCIA_PRINCIPAL);
  57:main.c        **** 
  58:main.c        ****     if (palReadPad(IOPORT2, AMBULANCIA_SECUNDARIA) == PAL_LOW)
  59:main.c        ****       PushBUffer(AMBULANCIA_SECUNDARIA);
  60:main.c        **** 
  61:main.c        ****     /* Debouce Delay */
  62:main.c        ****     chThdSleepMilliseconds(100);
  63:main.c        ****   }
  64:main.c        **** }
  65:main.c        **** 
  66:main.c        **** /* 
  67:main.c        ****   * Thread Read Event
  68:main.c        **** */
  69:main.c        **** static THD_WORKING_AREA(wa_ReadEvent, 128);
  70:main.c        **** static THD_FUNCTION(Read_Collect_Event, arg)
  71:main.c        **** {
  18               		.loc 1 71 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  25               	.LBB8:
  26               	.LBB9:
  27               		.file 2 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h"
   1:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*
   2:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
   5:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     This file is part of ChibiOS.
   6:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
   7:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     it under the terms of the GNU General Public License as published by
   9:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     the Free Software Foundation version 3 of the License.
  10:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  11:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     GNU General Public License for more details.
  15:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  16:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     You should have received a copy of the GNU General Public License
  17:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** */
  19:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  20:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
  21:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @file    rt/include/chregistry.h
  22:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Threads registry macros and structures.
  23:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
  24:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @addtogroup registry
  25:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @{
  26:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
  27:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  28:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #ifndef CHREGISTRY_H
  29:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #define CHREGISTRY_H
  30:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  31:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
  32:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  33:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  34:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Module constants.                                                         */
  35:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  36:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  37:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  38:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Module pre-compile time settings.                                         */
  39:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  40:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  41:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  42:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Derived constants and error checks.                                       */
  43:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  44:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  45:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  46:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Module data structures and types.                                         */
  47:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  48:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  49:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
  50:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   ChibiOS/RT memory signature record.
  51:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
  52:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** typedef struct {
  53:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   char      identifier[4];          /**< @brief Always set to "main".       */
  54:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   zero;                   /**< @brief Must be zero.               */
  55:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   size;                   /**< @brief Size of this structure.     */
  56:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint16_t  version;                /**< @brief Encoded ChibiOS/RT version. */
  57:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   ptrsize;                /**< @brief Size of a pointer.          */
  58:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   timesize;               /**< @brief Size of a @p systime_t.     */
  59:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   threadsize;             /**< @brief Size of a @p thread_t.      */
  60:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_prio;               /**< @brief Offset of @p prio field.    */
  61:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_ctx;                /**< @brief Offset of @p ctx field.     */
  62:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_newer;              /**< @brief Offset of @p newer field.   */
  63:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_older;              /**< @brief Offset of @p older field.   */
  64:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_name;               /**< @brief Offset of @p name field.    */
  65:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_stklimit;           /**< @brief Offset of @p stklimit field.*/
  66:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_state;              /**< @brief Offset of @p state field.   */
  67:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_flags;              /**< @brief Offset of @p flags field.   */
  68:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_refs;               /**< @brief Offset of @p refs field.    */
  69:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_preempt;            /**< @brief Offset of @p ticks field.   */
  70:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_time;               /**< @brief Offset of @p time field.    */
  71:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_reserved[4];
  72:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   intctxsize;             /**< @brief Size of a @p port_intctx.   */
  73:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   intervalsize;           /**< @brief Size of a @p sysinterval_t. */
  74:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   instancesnum;           /**< @brief Number of instances.        */
  75:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_sys_state;          /**< @brief Offset of @p state field.   */
  76:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_sys_instances;      /**< @brief Offset of @p instances array
  77:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****                                                 field.                      */
  78:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_sys_reglist;        /**< @brief Offset of @p reglist field. */
  79:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_sys_rfcu;           /**< @brief Offset of @p rfcu field.    */
  80:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_sys_reserved[4];
  81:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_rlist_current; /**< @brief Offset of @p rlist.current
  82:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****                                                 field.                      */
  83:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_rlist;         /**< @brief Offset of @p rlist field.   */
  84:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_vtlist;        /**< @brief Offset of @p vtlist field.  */
  85:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_reglist;       /**< @brief Offset of @p reglist field. */
  86:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_core_id;       /**< @brief Offset of @p core_id field. */
  87:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   uint8_t   off_inst_rfcu;          /**< @brief Offset of @p rfcu field.    */
  88:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** } chdebug_t;
  89:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  90:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  91:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Module macros.                                                            */
  92:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
  93:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
  94:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
  95:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Access to the registry list header.
  96:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
  97:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #if (CH_CFG_SMP_MODE == TRUE) || defined(__DOXYGEN__)
  98:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #define REG_HEADER(oip) (&ch_system.reglist.queue)
  99:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #else
 100:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #define REG_HEADER(oip) (&(oip)->reglist.queue)
 101:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #endif
 102:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 103:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
 104:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Removes a thread from the registry list.
 105:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
 106:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 107:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @param[in] tp        thread to remove from the registry
 108:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
 109:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #define REG_REMOVE(tp) (void) ch_queue_dequeue(&(tp)->rqueue)
 110:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 111:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
 112:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Adds a thread to the registry list.
 113:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
 114:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 115:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @param[in] oip       pointer to the OS instance
 116:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @param[in] tp        thread to add to the registry
 117:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
 118:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #define REG_INSERT(oip, tp) ch_queue_insert(REG_HEADER(oip), &(tp)->rqueue)
 119:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 120:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
 121:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* External declarations.                                                    */
 122:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
 123:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 124:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #ifdef __cplusplus
 125:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** extern "C" {
 126:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #endif
 127:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   extern ROMCONST chdebug_t ch_debug;
 128:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   thread_t *chRegFirstThread(void);
 129:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   thread_t *chRegNextThread(thread_t *tp);
 130:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByName(const char *name);
 131:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByPointer(thread_t *tp);
 132:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByWorkingArea(stkalign_t *wa);
 133:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #ifdef __cplusplus
 134:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** }
 135:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #endif
 136:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 137:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 138:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 139:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
 140:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /* Module inline functions.                                                  */
 141:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /*===========================================================================*/
 142:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 143:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
 144:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Initializes a registry.
 145:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @note    Internal use only.
 146:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 147:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @param[out] rp       pointer to a @p registry_t structure
 148:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 149:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @init
 150:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
 151:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** static inline void __reg_object_init(registry_t *rp) {
 152:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 153:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   ch_queue_init(&rp->queue);
 154:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** }
 155:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 156:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** /**
 157:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @brief   Sets the current thread name.
 158:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @pre     This function only stores the pointer to the name if the option
 159:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *          @p CH_CFG_USE_REGISTRY is enabled else no action is performed.
 160:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 161:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @param[in] name      thread name as a zero terminated string
 162:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  *
 163:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  * @api
 164:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****  */
 165:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** static inline void chRegSetThreadName(const char *name) {
 166:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** 
 167:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h **** #if CH_CFG_USE_REGISTRY == TRUE
 168:/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chregistry.h ****   __sch_get_currthread()->name = name;
  28               		.loc 2 168 0
  29 0000 E091 0000 		lds r30,ch0+5
  30 0004 F091 0000 		lds r31,ch0+5+1
  31 0008 80E0      		ldi r24,lo8(.LC0)
  32 000a 90E0      		ldi r25,hi8(.LC0)
  33               	.LVL1:
  34 000c 9687      		std Z+14,r25
  35 000e 8587      		std Z+13,r24
  36               	.LBE9:
  37               	.LBE8:
  72:main.c        ****   chRegSetThreadName("Read/Collect Event");
  73:main.c        ****   while (1)
  74:main.c        ****   {
  75:main.c        ****     if (!IsBUfferEmpty())
  76:main.c        ****       palTogglePad(IOPORT2, PORTB_LED1);
  38               		.loc 1 76 0
  39 0010 C0E2      		ldi r28,lo8(32)
  40               	.L3:
  75:main.c        ****       palTogglePad(IOPORT2, PORTB_LED1);
  41               		.loc 1 75 0
  42 0012 8091 0000 		lds r24,qsize
  43 0016 9091 0000 		lds r25,qsize+1
  44 001a 892B      		or r24,r25
  45 001c 01F0      		breq .L2
  46               		.loc 1 76 0
  47 001e 85B1      		in r24,0x5
  48 0020 8C27      		eor r24,r28
  49 0022 85B9      		out 0x5,r24
  50               	.L2:
  77:main.c        ****     chThdSleepMilliseconds(100);
  51               		.loc 1 77 0
  52 0024 8BE1      		ldi r24,lo8(27)
  53 0026 96E0      		ldi r25,lo8(6)
  54 0028 0E94 0000 		call chThdSleep
  55               	.LVL2:
  75:main.c        ****       palTogglePad(IOPORT2, PORTB_LED1);
  56               		.loc 1 75 0
  57 002c 00C0      		rjmp .L3
  58               		.cfi_endproc
  59               	.LFE240:
  61               		.section	.text.InitBuffer,"ax",@progbits
  62               	.global	InitBuffer
  64               	InitBuffer:
  65               	.LFB243:
  78:main.c        ****   }
  79:main.c        **** }
  80:main.c        **** 
  81:main.c        **** /* 
  82:main.c        ****   * Thread Process Event 
  83:main.c        **** */
  84:main.c        **** static THD_WORKING_AREA(wa_ProcessEvent, 128);
  85:main.c        **** static THD_FUNCTION(ProcessEvent, arg)
  86:main.c        **** {
  87:main.c        ****   char msg[] = "Maquina de estado\r\n";
  88:main.c        **** 
  89:main.c        ****   chRegSetThreadName("Process Event");
  90:main.c        ****   while (1)
  91:main.c        ****   {
  92:main.c        ****     sdWrite(&SD1, msg, sizeof(msg));
  93:main.c        ****     chThdSleepMilliseconds(100);
  94:main.c        ****   }
  95:main.c        **** }
  96:main.c        **** 
  97:main.c        **** /*
  98:main.c        ****  * Application entry point.
  99:main.c        ****  */
 100:main.c        **** int main(void) 
 101:main.c        **** {
 102:main.c        ****   thread_t *thd0 = 0, *thd1 = 0, *thd2 = 0;
 103:main.c        ****   SerialConfig Serial_Configuration = {.sc_brr = UBRR2x(115200), .sc_bits_per_char = USART_CHAR_SIZ
 104:main.c        **** 
 105:main.c        ****   InitBuffer();
 106:main.c        ****   /*
 107:main.c        ****    * System initializations.
 108:main.c        ****    * - HAL initialization, this also initializes the configured device drivers
 109:main.c        ****    *   and performs the board-specific initializations.
 110:main.c        ****    * - Kernel initialization, the main() function becomes a thread and the
 111:main.c        ****    *   RTOS is active.
 112:main.c        ****    */
 113:main.c        ****   halInit();
 114:main.c        ****   chSysInit();
 115:main.c        **** 
 116:main.c        ****   sdStart(&SD1, &Serial_Configuration);
 117:main.c        **** 
 118:main.c        ****   palSetPadMode(IOPORT2, PEDESTRE, PAL_MODE_INPUT_PULLUP);
 119:main.c        ****   palSetPadMode(IOPORT2, CARRO_SECUNDARIA, PAL_MODE_INPUT_PULLUP);
 120:main.c        ****   palSetPadMode(IOPORT2, AMBULANCIA_PRINCIPAL, PAL_MODE_INPUT_PULLUP);
 121:main.c        ****   palSetPadMode(IOPORT2, AMBULANCIA_SECUNDARIA, PAL_MODE_INPUT_PULLUP);  
 122:main.c        **** 
 123:main.c        ****   thd0 = chThdCreateStatic(wa_WriteEvent, sizeof(wa_WriteEvent), NORMALPRIO, Write_Save_Event, NULL
 124:main.c        ****   thd1 = chThdCreateStatic(wa_ReadEvent, sizeof(wa_ReadEvent), NORMALPRIO, Read_Collect_Event, NULL
 125:main.c        ****   //thd2 = chThdCreateStatic(wa_ProcessEvent, sizeof(wa_ProcessEvent), NORMALPRIO, ProcessEvent, NU
 126:main.c        **** 
 127:main.c        ****   while (true) 
 128:main.c        ****   {
 129:main.c        ****     chThdSleepMilliseconds(1);
 130:main.c        ****   }
 131:main.c        **** }
 132:main.c        **** 
 133:main.c        **** void InitBuffer()
 134:main.c        **** {
  66               		.loc 1 134 0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
 135:main.c        ****   chMtxObjectInit(&qmtx);
  72               		.loc 1 135 0
  73 0000 80E0      		ldi r24,lo8(qmtx)
  74 0002 90E0      		ldi r25,hi8(qmtx)
  75 0004 0E94 0000 		call chMtxObjectInit
  76               	.LVL3:
 136:main.c        ****   chCondObjectInit(&qempty);
  77               		.loc 1 136 0
  78 0008 80E0      		ldi r24,lo8(qempty)
  79 000a 90E0      		ldi r25,hi8(qempty)
  80 000c 0E94 0000 		call chCondObjectInit
  81               	.LVL4:
 137:main.c        ****   chCondObjectInit(&qfull);
  82               		.loc 1 137 0
  83 0010 80E0      		ldi r24,lo8(qfull)
  84 0012 90E0      		ldi r25,hi8(qfull)
  85 0014 0E94 0000 		call chCondObjectInit
  86               	.LVL5:
 138:main.c        ****  
 139:main.c        ****   rdp = wrp = &queue[0];
  87               		.loc 1 139 0
  88 0018 80E0      		ldi r24,lo8(queue)
  89 001a 90E0      		ldi r25,hi8(queue)
  90 001c 9093 0000 		sts wrp+1,r25
  91 0020 8093 0000 		sts wrp,r24
  92 0024 9093 0000 		sts rdp+1,r25
  93 0028 8093 0000 		sts rdp,r24
 140:main.c        ****   qsize = 0;
  94               		.loc 1 140 0
  95 002c 1092 0000 		sts qsize+1,__zero_reg__
  96 0030 1092 0000 		sts qsize,__zero_reg__
  97               	/* epilogue start */
 141:main.c        **** }
  98               		.loc 1 141 0
  99 0034 0895      		ret
 100               		.cfi_endproc
 101               	.LFE243:
 103               		.section	.text.startup.main,"ax",@progbits
 104               	.global	main
 106               	main:
 107               	.LFB242:
 101:main.c        ****   thread_t *thd0 = 0, *thd1 = 0, *thd2 = 0;
 108               		.loc 1 101 0
 109               		.cfi_startproc
 110 0000 CF93      		push r28
 111               	.LCFI0:
 112               		.cfi_def_cfa_offset 3
 113               		.cfi_offset 28, -2
 114 0002 DF93      		push r29
 115               	.LCFI1:
 116               		.cfi_def_cfa_offset 4
 117               		.cfi_offset 29, -3
 118 0004 00D0      		rcall .
 119 0006 1F92      		push __zero_reg__
 120               	.LCFI2:
 121               		.cfi_def_cfa_offset 7
 122 0008 CDB7      		in r28,__SP_L__
 123 000a DEB7      		in r29,__SP_H__
 124               	.LCFI3:
 125               		.cfi_def_cfa_register 28
 126               	/* prologue: function */
 127               	/* frame size = 3 */
 128               	/* stack size = 5 */
 129               	.L__stack_usage = 5
 130               	.LVL6:
 103:main.c        **** 
 131               		.loc 1 103 0
 132 000c 80E1      		ldi r24,lo8(16)
 133 000e 90E0      		ldi r25,0
 134 0010 9A83      		std Y+2,r25
 135 0012 8983      		std Y+1,r24
 136 0014 83E0      		ldi r24,lo8(3)
 137 0016 8B83      		std Y+3,r24
 105:main.c        ****   /*
 138               		.loc 1 105 0
 139 0018 0E94 0000 		call InitBuffer
 140               	.LVL7:
 113:main.c        ****   chSysInit();
 141               		.loc 1 113 0
 142 001c 0E94 0000 		call halInit
 143               	.LVL8:
 114:main.c        **** 
 144               		.loc 1 114 0
 145 0020 0E94 0000 		call chSysInit
 146               	.LVL9:
 116:main.c        **** 
 147               		.loc 1 116 0
 148 0024 BE01      		movw r22,r28
 149 0026 6F5F      		subi r22,-1
 150 0028 7F4F      		sbci r23,-1
 151 002a 80E0      		ldi r24,lo8(SD1)
 152 002c 90E0      		ldi r25,hi8(SD1)
 153 002e 0E94 0000 		call sdStart
 154               	.LVL10:
 118:main.c        ****   palSetPadMode(IOPORT2, CARRO_SECUNDARIA, PAL_MODE_INPUT_PULLUP);
 155               		.loc 1 118 0
 156 0032 43E0      		ldi r20,lo8(3)
 157 0034 60E1      		ldi r22,lo8(16)
 158 0036 83E2      		ldi r24,lo8(35)
 159 0038 90E0      		ldi r25,0
 160 003a 0E94 0000 		call _pal_lld_setgroupmode
 161               	.LVL11:
 119:main.c        ****   palSetPadMode(IOPORT2, AMBULANCIA_PRINCIPAL, PAL_MODE_INPUT_PULLUP);
 162               		.loc 1 119 0
 163 003e 43E0      		ldi r20,lo8(3)
 164 0040 68E0      		ldi r22,lo8(8)
 165 0042 83E2      		ldi r24,lo8(35)
 166 0044 90E0      		ldi r25,0
 167 0046 0E94 0000 		call _pal_lld_setgroupmode
 168               	.LVL12:
 120:main.c        ****   palSetPadMode(IOPORT2, AMBULANCIA_SECUNDARIA, PAL_MODE_INPUT_PULLUP);  
 169               		.loc 1 120 0
 170 004a 43E0      		ldi r20,lo8(3)
 171 004c 64E0      		ldi r22,lo8(4)
 172 004e 83E2      		ldi r24,lo8(35)
 173 0050 90E0      		ldi r25,0
 174 0052 0E94 0000 		call _pal_lld_setgroupmode
 175               	.LVL13:
 121:main.c        **** 
 176               		.loc 1 121 0
 177 0056 43E0      		ldi r20,lo8(3)
 178 0058 62E0      		ldi r22,lo8(2)
 179 005a 83E2      		ldi r24,lo8(35)
 180 005c 90E0      		ldi r25,0
 181 005e 0E94 0000 		call _pal_lld_setgroupmode
 182               	.LVL14:
 123:main.c        ****   thd1 = chThdCreateStatic(wa_ReadEvent, sizeof(wa_ReadEvent), NORMALPRIO, Read_Collect_Event, NULL
 183               		.loc 1 123 0
 184 0062 10E0      		ldi r17,0
 185 0064 00E0      		ldi r16,0
 186 0066 20E0      		ldi r18,lo8(gs(Write_Save_Event))
 187 0068 30E0      		ldi r19,hi8(gs(Write_Save_Event))
 188 006a 40E8      		ldi r20,lo8(-128)
 189 006c 63EE      		ldi r22,lo8(-29)
 190 006e 70E0      		ldi r23,0
 191 0070 80E0      		ldi r24,lo8(wa_WriteEvent)
 192 0072 90E0      		ldi r25,hi8(wa_WriteEvent)
 193 0074 0E94 0000 		call chThdCreateStatic
 194               	.LVL15:
 124:main.c        ****   //thd2 = chThdCreateStatic(wa_ProcessEvent, sizeof(wa_ProcessEvent), NORMALPRIO, ProcessEvent, NU
 195               		.loc 1 124 0
 196 0078 20E0      		ldi r18,lo8(gs(Read_Collect_Event))
 197 007a 30E0      		ldi r19,hi8(gs(Read_Collect_Event))
 198 007c 40E8      		ldi r20,lo8(-128)
 199 007e 63EE      		ldi r22,lo8(-29)
 200 0080 70E0      		ldi r23,0
 201 0082 80E0      		ldi r24,lo8(wa_ReadEvent)
 202 0084 90E0      		ldi r25,hi8(wa_ReadEvent)
 203 0086 0E94 0000 		call chThdCreateStatic
 204               	.LVL16:
 205               	.L10:
 129:main.c        ****   }
 206               		.loc 1 129 0 discriminator 1
 207 008a 80E1      		ldi r24,lo8(16)
 208 008c 90E0      		ldi r25,0
 209 008e 0E94 0000 		call chThdSleep
 210               	.LVL17:
 211 0092 00C0      		rjmp .L10
 212               		.cfi_endproc
 213               	.LFE242:
 215               		.section	.text.PushBUffer,"ax",@progbits
 216               	.global	PushBUffer
 218               	PushBUffer:
 219               	.LFB244:
 142:main.c        **** 
 143:main.c        **** void PushBUffer(msg_t msg)
 144:main.c        **** {
 220               		.loc 1 144 0
 221               		.cfi_startproc
 222               	.LVL18:
 223 0000 CF93      		push r28
 224               	.LCFI4:
 225               		.cfi_def_cfa_offset 3
 226               		.cfi_offset 28, -2
 227 0002 DF93      		push r29
 228               	.LCFI5:
 229               		.cfi_def_cfa_offset 4
 230               		.cfi_offset 29, -3
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 2 */
 234               	.L__stack_usage = 2
 235 0004 EC01      		movw r28,r24
 145:main.c        ****   /* Entering monitor.*/
 146:main.c        ****   chMtxLock(&qmtx);
 236               		.loc 1 146 0
 237 0006 80E0      		ldi r24,lo8(qmtx)
 238 0008 90E0      		ldi r25,hi8(qmtx)
 239               	.LVL19:
 240 000a 0E94 0000 		call chMtxLock
 241               	.LVL20:
 147:main.c        ****  
 148:main.c        ****   /* Waiting for space in the queue.*/
 149:main.c        ****   while (qsize >= QUEUE_SIZE)
 242               		.loc 1 149 0
 243 000e 8091 0000 		lds r24,qsize
 244 0012 9091 0000 		lds r25,qsize+1
 245 0016 8038      		cpi r24,-128
 246 0018 9105      		cpc r25,__zero_reg__
 247 001a 00F0      		brlo .L12
 248               	.L13:
 150:main.c        ****     chCondWait(&qfull);
 249               		.loc 1 150 0
 250 001c 80E0      		ldi r24,lo8(qfull)
 251 001e 90E0      		ldi r25,hi8(qfull)
 252 0020 0E94 0000 		call chCondWait
 253               	.LVL21:
 149:main.c        ****     chCondWait(&qfull);
 254               		.loc 1 149 0
 255 0024 8091 0000 		lds r24,qsize
 256 0028 9091 0000 		lds r25,qsize+1
 257 002c 8038      		cpi r24,-128
 258 002e 9105      		cpc r25,__zero_reg__
 259 0030 00F4      		brsh .L13
 260               	.L12:
 151:main.c        ****  
 152:main.c        ****   /* Writing the message in the queue.*/  
 153:main.c        ****   *wrp = msg;
 261               		.loc 1 153 0
 262 0032 E091 0000 		lds r30,wrp
 263 0036 F091 0000 		lds r31,wrp+1
 264 003a C193      		st Z+,r28
 265 003c D193      		st Z+,r29
 154:main.c        ****   if (++wrp >= &queue[QUEUE_SIZE])
 266               		.loc 1 154 0
 267 003e 20E0      		ldi r18,hi8(queue+256)
 268 0040 E030      		cpi r30,lo8(queue+256)
 269 0042 F207      		cpc r31,r18
 270 0044 00F0      		brlo .L17
 155:main.c        ****     wrp = &queue[0];
 271               		.loc 1 155 0
 272 0046 20E0      		ldi r18,lo8(queue)
 273 0048 30E0      		ldi r19,hi8(queue)
 274 004a 3093 0000 		sts wrp+1,r19
 275 004e 2093 0000 		sts wrp,r18
 276               	.L15:
 156:main.c        ****   qsize++;
 277               		.loc 1 156 0
 278 0052 0196      		adiw r24,1
 279 0054 9093 0000 		sts qsize+1,r25
 280 0058 8093 0000 		sts qsize,r24
 157:main.c        **** 
 158:main.c        ****   /* Signaling that there is at least a message.*/
 159:main.c        ****   chCondSignal(&qempty);
 281               		.loc 1 159 0
 282 005c 80E0      		ldi r24,lo8(qempty)
 283 005e 90E0      		ldi r25,hi8(qempty)
 284 0060 0E94 0000 		call chCondSignal
 285               	.LVL22:
 160:main.c        **** 
 161:main.c        ****   /* Leaving monitor.*/
 162:main.c        ****   chMtxUnlock(&qmtx);
 286               		.loc 1 162 0
 287 0064 80E0      		ldi r24,lo8(qmtx)
 288 0066 90E0      		ldi r25,hi8(qmtx)
 289               	/* epilogue start */
 163:main.c        **** }
 290               		.loc 1 163 0
 291 0068 DF91      		pop r29
 292 006a CF91      		pop r28
 293               	.LVL23:
 162:main.c        **** }
 294               		.loc 1 162 0
 295 006c 0C94 0000 		jmp chMtxUnlock
 296               	.LVL24:
 297               	.L17:
 154:main.c        ****     wrp = &queue[0];
 298               		.loc 1 154 0
 299 0070 F093 0000 		sts wrp+1,r31
 300 0074 E093 0000 		sts wrp,r30
 301 0078 00C0      		rjmp .L15
 302               		.cfi_endproc
 303               	.LFE244:
 305               		.section	.rodata.Write_Save_Event.str1.1,"aMS",@progbits,1
 306               	.LC1:
 307 0000 5361 7665 		.string	"Save/Write Event"
 307      2F57 7269 
 307      7465 2045 
 307      7665 6E74 
 307      00
 308               		.section	.text.Write_Save_Event,"ax",@progbits
 310               	Write_Save_Event:
 311               	.LFB239:
  45:main.c        ****   chRegSetThreadName("Save/Write Event");
 312               		.loc 1 45 0
 313               		.cfi_startproc
 314               	.LVL25:
 315               	/* prologue: function */
 316               	/* frame size = 0 */
 317               	/* stack size = 0 */
 318               	.L__stack_usage = 0
 319               	.LBB10:
 320               	.LBB11:
 321               		.loc 2 168 0
 322 0000 E091 0000 		lds r30,ch0+5
 323 0004 F091 0000 		lds r31,ch0+5+1
 324 0008 80E0      		ldi r24,lo8(.LC1)
 325 000a 90E0      		ldi r25,hi8(.LC1)
 326               	.LVL26:
 327 000c 9687      		std Z+14,r25
 328 000e 8587      		std Z+13,r24
 329 0010 00C0      		rjmp .L23
 330               	.L19:
 331               	.LBE11:
 332               	.LBE10:
  52:main.c        ****       PushBUffer(CARRO_SECUNDARIA);
 333               		.loc 1 52 0
 334 0012 1B9B      		sbis 0x3,3
 335 0014 00C0      		rjmp .L24
 336               	.L20:
  55:main.c        ****       PushBUffer(AMBULANCIA_PRINCIPAL);
 337               		.loc 1 55 0
 338 0016 1A9B      		sbis 0x3,2
 339 0018 00C0      		rjmp .L25
 340               	.L21:
  58:main.c        ****       PushBUffer(AMBULANCIA_SECUNDARIA);
 341               		.loc 1 58 0
 342 001a 199B      		sbis 0x3,1
 343 001c 00C0      		rjmp .L26
 344               	.L22:
  62:main.c        ****   }
 345               		.loc 1 62 0
 346 001e 8BE1      		ldi r24,lo8(27)
 347 0020 96E0      		ldi r25,lo8(6)
 348 0022 0E94 0000 		call chThdSleep
 349               	.LVL27:
 350               	.L23:
  49:main.c        ****       PushBUffer(PEDESTRE);
 351               		.loc 1 49 0
 352 0026 1C99      		sbic 0x3,4
 353 0028 00C0      		rjmp .L19
  50:main.c        **** 
 354               		.loc 1 50 0
 355 002a 84E0      		ldi r24,lo8(4)
 356 002c 90E0      		ldi r25,0
 357 002e 0E94 0000 		call PushBUffer
 358               	.LVL28:
  52:main.c        ****       PushBUffer(CARRO_SECUNDARIA);
 359               		.loc 1 52 0
 360 0032 1B99      		sbic 0x3,3
 361 0034 00C0      		rjmp .L20
 362               	.L24:
  53:main.c        **** 
 363               		.loc 1 53 0
 364 0036 83E0      		ldi r24,lo8(3)
 365 0038 90E0      		ldi r25,0
 366 003a 0E94 0000 		call PushBUffer
 367               	.LVL29:
  55:main.c        ****       PushBUffer(AMBULANCIA_PRINCIPAL);
 368               		.loc 1 55 0
 369 003e 1A99      		sbic 0x3,2
 370 0040 00C0      		rjmp .L21
 371               	.L25:
  56:main.c        **** 
 372               		.loc 1 56 0
 373 0042 82E0      		ldi r24,lo8(2)
 374 0044 90E0      		ldi r25,0
 375 0046 0E94 0000 		call PushBUffer
 376               	.LVL30:
  58:main.c        ****       PushBUffer(AMBULANCIA_SECUNDARIA);
 377               		.loc 1 58 0
 378 004a 1999      		sbic 0x3,1
 379 004c 00C0      		rjmp .L22
 380               	.L26:
  59:main.c        **** 
 381               		.loc 1 59 0
 382 004e 81E0      		ldi r24,lo8(1)
 383 0050 90E0      		ldi r25,0
 384 0052 0E94 0000 		call PushBUffer
 385               	.LVL31:
 386 0056 00C0      		rjmp .L22
 387               		.cfi_endproc
 388               	.LFE239:
 390               		.section	.text.PopBUffer,"ax",@progbits
 391               	.global	PopBUffer
 393               	PopBUffer:
 394               	.LFB245:
 164:main.c        **** 
 165:main.c        **** msg_t PopBUffer()
 166:main.c        **** {
 395               		.loc 1 166 0
 396               		.cfi_startproc
 397 0000 CF93      		push r28
 398               	.LCFI6:
 399               		.cfi_def_cfa_offset 3
 400               		.cfi_offset 28, -2
 401 0002 DF93      		push r29
 402               	.LCFI7:
 403               		.cfi_def_cfa_offset 4
 404               		.cfi_offset 29, -3
 405               	/* prologue: function */
 406               	/* frame size = 0 */
 407               	/* stack size = 2 */
 408               	.L__stack_usage = 2
 167:main.c        ****   msg_t msg;
 168:main.c        ****  
 169:main.c        ****   /* Entering monitor.*/
 170:main.c        ****   chMtxLock(&qmtx);
 409               		.loc 1 170 0
 410 0004 80E0      		ldi r24,lo8(qmtx)
 411 0006 90E0      		ldi r25,hi8(qmtx)
 412 0008 0E94 0000 		call chMtxLock
 413               	.LVL32:
 171:main.c        ****  
 172:main.c        ****   /* Waiting for messages in the queue.*/
 173:main.c        ****   while (qsize == 0)
 414               		.loc 1 173 0
 415 000c 8091 0000 		lds r24,qsize
 416 0010 9091 0000 		lds r25,qsize+1
 417 0014 0097      		sbiw r24,0
 418 0016 01F4      		brne .L28
 419               	.L29:
 174:main.c        ****     chCondWait(&qempty);
 420               		.loc 1 174 0
 421 0018 80E0      		ldi r24,lo8(qempty)
 422 001a 90E0      		ldi r25,hi8(qempty)
 423 001c 0E94 0000 		call chCondWait
 424               	.LVL33:
 173:main.c        ****     chCondWait(&qempty);
 425               		.loc 1 173 0
 426 0020 8091 0000 		lds r24,qsize
 427 0024 9091 0000 		lds r25,qsize+1
 428 0028 0097      		sbiw r24,0
 429 002a 01F0      		breq .L29
 430               	.L28:
 175:main.c        ****  
 176:main.c        ****   /* Reading the message from the queue.*/  
 177:main.c        ****   msg = *rdp;
 431               		.loc 1 177 0
 432 002c E091 0000 		lds r30,rdp
 433 0030 F091 0000 		lds r31,rdp+1
 434 0034 C191      		ld r28,Z+
 435 0036 D191      		ld r29,Z+
 436               	.LVL34:
 178:main.c        ****   if (++rdp >= &queue[QUEUE_SIZE])
 437               		.loc 1 178 0
 438 0038 20E0      		ldi r18,hi8(queue+256)
 439 003a E030      		cpi r30,lo8(queue+256)
 440 003c F207      		cpc r31,r18
 441 003e 00F0      		brlo .L34
 179:main.c        ****     rdp = &queue[0];
 442               		.loc 1 179 0
 443 0040 20E0      		ldi r18,lo8(queue)
 444 0042 30E0      		ldi r19,hi8(queue)
 445 0044 3093 0000 		sts rdp+1,r19
 446 0048 2093 0000 		sts rdp,r18
 447               	.L31:
 180:main.c        ****   qsize--;
 448               		.loc 1 180 0
 449 004c 0197      		sbiw r24,1
 450 004e 9093 0000 		sts qsize+1,r25
 451 0052 8093 0000 		sts qsize,r24
 181:main.c        ****  
 182:main.c        ****   /* Signaling that there is at least one free slot.*/
 183:main.c        ****   chCondSignal(&qfull);
 452               		.loc 1 183 0
 453 0056 80E0      		ldi r24,lo8(qfull)
 454 0058 90E0      		ldi r25,hi8(qfull)
 455 005a 0E94 0000 		call chCondSignal
 456               	.LVL35:
 184:main.c        ****  
 185:main.c        ****   /* Leaving monitor.*/
 186:main.c        ****   chMtxUnlock(&qmtx);
 457               		.loc 1 186 0
 458 005e 80E0      		ldi r24,lo8(qmtx)
 459 0060 90E0      		ldi r25,hi8(qmtx)
 460 0062 0E94 0000 		call chMtxUnlock
 461               	.LVL36:
 187:main.c        ****  
 188:main.c        ****   return msg;
 189:main.c        **** }
 462               		.loc 1 189 0
 463 0066 CE01      		movw r24,r28
 464               	/* epilogue start */
 465 0068 DF91      		pop r29
 466 006a CF91      		pop r28
 467               	.LVL37:
 468 006c 0895      		ret
 469               	.LVL38:
 470               	.L34:
 178:main.c        ****     rdp = &queue[0];
 471               		.loc 1 178 0
 472 006e F093 0000 		sts rdp+1,r31
 473 0072 E093 0000 		sts rdp,r30
 474 0076 00C0      		rjmp .L31
 475               		.cfi_endproc
 476               	.LFE245:
 478               		.section	.text.IsBUfferEmpty,"ax",@progbits
 479               	.global	IsBUfferEmpty
 481               	IsBUfferEmpty:
 482               	.LFB246:
 190:main.c        **** 
 191:main.c        **** int IsBUfferEmpty()
 192:main.c        **** {
 483               		.loc 1 192 0
 484               		.cfi_startproc
 485               	/* prologue: function */
 486               	/* frame size = 0 */
 487               	/* stack size = 0 */
 488               	.L__stack_usage = 0
 193:main.c        ****   return qsize == 0;
 489               		.loc 1 193 0
 490 0000 81E0      		ldi r24,lo8(1)
 491 0002 90E0      		ldi r25,0
 492 0004 2091 0000 		lds r18,qsize
 493 0008 3091 0000 		lds r19,qsize+1
 494 000c 232B      		or r18,r19
 495 000e 01F0      		breq .L36
 496 0010 90E0      		ldi r25,0
 497 0012 80E0      		ldi r24,0
 498               	.L36:
 499               	/* epilogue start */
 194:main.c        **** }
 500               		.loc 1 194 0
 501 0014 0895      		ret
 502               		.cfi_endproc
 503               	.LFE246:
 505               		.section	.bss.wa_ReadEvent,"aw",@nobits
 508               	wa_ReadEvent:
 509 0000 0000 0000 		.zero	227
 509      0000 0000 
 509      0000 0000 
 509      0000 0000 
 509      0000 0000 
 510               		.section	.bss.wa_WriteEvent,"aw",@nobits
 513               	wa_WriteEvent:
 514 0000 0000 0000 		.zero	227
 514      0000 0000 
 514      0000 0000 
 514      0000 0000 
 514      0000 0000 
 515               		.section	.bss.qfull,"aw",@nobits
 518               	qfull:
 519 0000 0000 0000 		.zero	4
 520               		.section	.bss.qempty,"aw",@nobits
 523               	qempty:
 524 0000 0000 0000 		.zero	4
 525               		.section	.bss.qmtx,"aw",@nobits
 528               	qmtx:
 529 0000 0000 0000 		.zero	8
 529      0000 0000 
 530               		.section	.bss.qsize,"aw",@nobits
 533               	qsize:
 534 0000 0000      		.zero	2
 535               		.section	.bss.wrp,"aw",@nobits
 538               	wrp:
 539 0000 0000      		.zero	2
 540               		.section	.bss.rdp,"aw",@nobits
 543               	rdp:
 544 0000 0000      		.zero	2
 545               		.section	.bss.queue,"aw",@nobits
 548               	queue:
 549 0000 0000 0000 		.zero	256
 549      0000 0000 
 549      0000 0000 
 549      0000 0000 
 549      0000 0000 
 550               		.text
 551               	.Letext0:
 552               		.file 3 "/usr/lib/gcc/avr/7.3.0/include/stddef.h"
 553               		.file 4 "/usr/lib/avr/include/stdint.h"
 554               		.file 5 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/common/ports/AVR/compile
 555               		.file 6 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chearly.h"
 556               		.file 7 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chobjects.h"
 557               		.file 8 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chrfcu.h"
 558               		.file 9 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chdebug.h"
 559               		.file 10 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chtime.h"
 560               		.file 11 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chlists.h"
 561               		.file 12 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/common/ports/AVR/chcore
 562               		.file 13 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chsem.h"
 563               		.file 14 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chmtx.h"
 564               		.file 15 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chsys.h"
 565               		.file 16 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chcond.h"
 566               		.file 17 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chevents.h"
 567               		.file 18 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/oslib/include/chmemcore
 568               		.file 19 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/hal/include/hal_queues.
 569               		.file 20 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/hal/ports/AVR/MEGA/LLD/
 570               		.file 21 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/hal/include/hal_serial.
 571               		.file 22 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/hal/ports/AVR/MEGA/LLD/
 572               		.file 23 "/usr/lib/avr/include/stdio.h"
 573               		.file 24 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/hal/include/hal.h"
 574               		.file 25 "/home/joao/Documentos/UFPE/Embarcados/ChibiOS/ChibiOS_21.11.3/os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwVgddD.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccwVgddD.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccwVgddD.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccwVgddD.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccwVgddD.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccwVgddD.s:15     .text.Read_Collect_Event:0000000000000000 Read_Collect_Event
     /tmp/ccwVgddD.s:533    .bss.qsize:0000000000000000 qsize
     /tmp/ccwVgddD.s:64     .text.InitBuffer:0000000000000000 InitBuffer
     /tmp/ccwVgddD.s:528    .bss.qmtx:0000000000000000 qmtx
     /tmp/ccwVgddD.s:523    .bss.qempty:0000000000000000 qempty
     /tmp/ccwVgddD.s:518    .bss.qfull:0000000000000000 qfull
     /tmp/ccwVgddD.s:548    .bss.queue:0000000000000000 queue
     /tmp/ccwVgddD.s:538    .bss.wrp:0000000000000000 wrp
     /tmp/ccwVgddD.s:543    .bss.rdp:0000000000000000 rdp
     /tmp/ccwVgddD.s:106    .text.startup.main:0000000000000000 main
     /tmp/ccwVgddD.s:310    .text.Write_Save_Event:0000000000000000 Write_Save_Event
     /tmp/ccwVgddD.s:513    .bss.wa_WriteEvent:0000000000000000 wa_WriteEvent
     /tmp/ccwVgddD.s:508    .bss.wa_ReadEvent:0000000000000000 wa_ReadEvent
     /tmp/ccwVgddD.s:218    .text.PushBUffer:0000000000000000 PushBUffer
     /tmp/ccwVgddD.s:393    .text.PopBUffer:0000000000000000 PopBUffer
     /tmp/ccwVgddD.s:481    .text.IsBUfferEmpty:0000000000000000 IsBUfferEmpty

UNDEFINED SYMBOLS
ch0
chThdSleep
chMtxObjectInit
chCondObjectInit
halInit
chSysInit
SD1
sdStart
_pal_lld_setgroupmode
chThdCreateStatic
chMtxLock
chCondWait
chCondSignal
chMtxUnlock
__do_copy_data
__do_clear_bss
